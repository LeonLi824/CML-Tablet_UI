{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liyue\\\\Documents\\\\CML-Tablet_UI\\\\src\\\\pages\\\\inMotion.js\",\n  _s = $RefreshSig$();\n// src/pages/InMotion.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InMotion = () => {\n  _s();\n  const [isPaused, setIsPaused] = useState(false); // State to track whether the system is paused\n\n  const togglePause = () => {\n    setIsPaused(!isPaused); // Toggle the pause state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-600 text-white py-2 px-4 rounded-md mb-6\",\n      children: isPaused ? 'Paused' : 'In Progress'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePause,\n      className: \"bg-blue-600 text-white font-bold py-4 px-8 rounded-full text-2xl shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\",\n      children: [isPaused ? 'Resume' : 'Pause', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(InMotion, \"X3NBeYcdtzR7N1pPpkWJDB4rGUI=\");\n_c = InMotion;\nexport default InMotion;\nvar _c;\n$RefreshReg$(_c, \"InMotion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InMotion","_s","isPaused","setIsPaused","togglePause","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/liyue/Documents/CML-Tablet_UI/src/pages/inMotion.js"],"sourcesContent":["// src/pages/InMotion.js\r\nimport React, { useState } from 'react';\r\n\r\nconst InMotion = () => {\r\n  const [isPaused, setIsPaused] = useState(false); // State to track whether the system is paused\r\n\r\n  const togglePause = () => {\r\n    setIsPaused(!isPaused); // Toggle the pause state\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100\">\r\n      {/* Status Tab */}\r\n      <div className=\"bg-blue-600 text-white py-2 px-4 rounded-md mb-6\">\r\n        {isPaused ? 'Paused' : 'In Progress'}\r\n      </div>\r\n\r\n      {/* Pause Button */}\r\n      <button\r\n        onClick={togglePause}\r\n        className=\"bg-blue-600 text-white font-bold py-4 px-8 rounded-full text-2xl shadow-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n      >\r\n        {isPaused ? 'Resume' : 'Pause'} {/* Button text changes based on state */}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InMotion;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,CAACD,QAAQ,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAC,oEAAoE;IAAAC,QAAA,gBAEjFP,OAAA;MAAKM,SAAS,EAAC,kDAAkD;MAAAC,QAAA,EAC9DJ,QAAQ,GAAG,QAAQ,GAAG;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eAGNX,OAAA;MACEY,OAAO,EAAEP,WAAY;MACrBC,SAAS,EAAC,sKAAsK;MAAAC,QAAA,GAE/KJ,QAAQ,GAAG,QAAQ,GAAG,OAAO,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACT,EAAA,CAvBID,QAAQ;AAAAY,EAAA,GAARZ,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}